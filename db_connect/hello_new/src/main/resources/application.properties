
server.port=8001

# For MySQL connection
#spring.datasource.url=jdbc:mysql://140.116.164.190:3306/Case_hospital?serverTimezone=UTC&useSSL=false
# loadbalance frist then failover
#spring.datasource.url= jdbc:mysql:loadbalance://140.116.164.191:3306,140.116.164.190:3306/Case_hospital?failOverReadOnly=false&autoReconnect=true&loadBalanceStrategy=random&connectTimeout=5000&tcpKeepAlive=true
spring.datasource.url= jdbc:mysql:loadbalance://140.116.164.191:3306,140.116.164.190:3306/Case_hospital?failOverReadOnly=false&autoReconnect=true&useSSL=false&loadBalanceStrategy=random
#loadbalance:// ? Enables load balancing between multiple hosts automatically.
#140.116.164.190:3306,140.116.164.191:3306 ? Specifies the multiple MySQL servers (similar to ADDRESS=(HOST=...) in Oracle).
#failOverReadOnly=false ? Ensures write operations continue after failover (instead of read-only mode).
#autoReconnect=true ? Helps maintain the connection during transient failures.
#useSSL=false ? Disables SSL (modify this based on your security preferences).
# failover
#spring.datasource.url= jdbc:mysql://140.116.164.191:3306,140.116.164.190:3306/Case_hospital?failOverReadOnly=false&autoReconnect=true&connectTimeout=5000&tcpKeepAlive=true
#spring.datasource.url= jdbc:mysql://140.116.164.190:3306,140.116.164.191:3306/Case_hospital?failOverReadOnly=false&autoReconnect=true&connectTimeout=5000&tcpKeepAlive=true

# failover/ loadbalance
#reference: https://stackoverflow.com/questions/30245430/spring-boot-properties-load-balanced-datasource
#dbUrl = "jdbc:oracle:thin@(description=(load_balance=off)(failover=on)
#(address=(protocol=tcp)(host=host1.bar.com)(port=2000))
#(address=(protocol=tcp)(host=host2.bar.com)(port=2000))
#(connect_data=(service_name=PROD)(failover_mode=(type=select)(method=basic)(retries=5)(delay=5))))
#-----------------------
spring.datasource.username=Case
spring.datasource.password=pass1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.http.encoding.force=true
#-----------------------
# connection poll setting
# reference: https://stackoverflow.com/questions/58531251/how-to-configure-connection-pool-in-spring-boot
spring.datasource.hikari.maximum-pool-size=30
# reference: https://medium.com/@AlexanderObregon/how-spring-boot-optimizes-database-connections-through-hikaricp-f19be1a246d7
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
